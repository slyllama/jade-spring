[gd_resource type="Shader" format=3 uid="uid://d0lxlmq8gekwj"]

[resource]
code = "shader_type spatial;

uniform sampler2D SCREEN_TEXTURE: hint_screen_texture, filter_linear_mipmap, repeat_enable;

uniform float roughness = 0.2;
uniform float speed_scale = 1.0;
uniform float normal_strength: hint_range(0.0, 1.0) = 1.0;
uniform float foam_exponent = 3.0;
uniform float metallic = 1.0;
uniform vec2 uv_scale = vec2(12.0);

uniform vec3 primary_color: source_color;
uniform vec3 foam_color: source_color;

uniform sampler2D normal_a: hint_normal;
uniform sampler2D normal_b: hint_normal;
uniform sampler2D light_foam: filter_linear_mipmap, repeat_enable;
uniform sampler2D alpha_mask: hint_default_black;

float fresnel(float amount, vec3 normal, vec3 view) {
	return pow((1.0 - clamp(
		dot(normalize(normal), normalize(view)), 0.0, 1.0)), amount);
}

void fragment() {
	NORMAL_MAP = mix(
		texture(normal_a, UV * vec2(uv_scale) + TIME * 0.02 * speed_scale).rgb,
		texture(normal_b, UV * vec2(uv_scale * 0.75) - TIME * 0.017 * speed_scale).rgb,
		0.5);
	NORMAL_MAP_DEPTH = normal_strength;

	ALPHA -= texture(alpha_mask, UV).r;
	ALPHA = clamp(ALPHA, 0.0, 1.0);

	float foam_mix = pow(texture(light_foam, UV * uv_scale + TIME * -0.02 * speed_scale).r, foam_exponent) * fresnel(2.0, NORMAL, VIEW);
	vec2 wobble = texture(light_foam, SCREEN_UV * vec2(1.0, 10.0) + TIME * 0.1).rg;

	ALBEDO = primary_color;
	ALBEDO = mix(ALBEDO, foam_color, foam_mix);
	ALBEDO += pow(texture(alpha_mask, UV).g, 0.9) * foam_color * 0.5;
	ALBEDO += texture(SCREEN_TEXTURE, SCREEN_UV * vec2(1.0, -1.5) + wobble * 0.03).rgb * fresnel(4.0, NORMAL, VIEW);
	ALBEDO = clamp(ALBEDO, vec3(0.0), vec3(1.0));

	ROUGHNESS = roughness;
	METALLIC = metallic;
}
"
