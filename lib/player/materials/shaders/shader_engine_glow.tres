[gd_resource type="Shader" format=3 uid="uid://cr660gpb0btrf"]

[resource]
code = "shader_type spatial;
render_mode unshaded, shadows_disabled, fog_disabled, ambient_light_disabled;

uniform sampler2D screen_texture: hint_screen_texture, filter_linear_mipmap;
uniform sampler2D noise: filter_linear_mipmap, repeat_enable;
uniform vec4 glow_color: source_color;

float circle(vec2 position, float radius, float feather) {
	return(smoothstep(radius, radius + feather, length(position - vec2(0.5))));
}

void vertex() {
	// Billboard - always face the camera
	MODELVIEW_MATRIX = VIEW_MATRIX * mat4(
		MAIN_CAM_INV_VIEW_MATRIX[0],
		MAIN_CAM_INV_VIEW_MATRIX[1],
		MAIN_CAM_INV_VIEW_MATRIX[2],
		MODEL_MATRIX[3]);
	MODELVIEW_NORMAL_MATRIX = mat3(MODELVIEW_MATRIX);
}

void fragment() {
	float wobble_size = 0.2;
	float wobble_intensity = 0.03;
	float speed_scale = 0.1;

	vec2 wobble = texture(noise, UV * wobble_size + TIME * speed_scale).rg * wobble_intensity;
	vec3 screen_wobble = texture(screen_texture, SCREEN_UV + wobble).rgb;
	ALBEDO = mix(screen_wobble, texture(screen_texture, SCREEN_UV).rgb, circle(UV, 0.25, 0.25));
	ALPHA = 0.9;
	ALBEDO += (1.0 - circle(UV, 0.01, 0.3)) * glow_color.rgb * 0.5;
}
"
